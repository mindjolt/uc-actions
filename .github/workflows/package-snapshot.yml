name: 'Package Snapshot'

on:
  workflow_call:
    inputs:
      sdk_name:
        type: string
        required: true
      branch:
        type: string
        required: true
      version:
        type: string
        required: true

jobs:
  build-and-release-package:
    name: 'Build and Release Snapshot'
    runs-on: ['self-hosted', 'macOS', 'unity', 'unity-core']
    defaults:
      run:
        shell: bash

    env:
      PACKAGE_NAME: 'JamCity.UnityCore.${{ github.event.inputs.sdk_name }}'
      RELEASE_PATH: 'Assets/Plugins/JamCity/JamCity.UnityCore.${{ github.event.inputs.sdk_name }}/Editor/Release'

    steps:
      - name: Cloning ${{ github.ref }}
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: 'Create package'
        working-directory: ${{ env.RELEASE_PATH }}
        run: ./gradlew createPackage
        env:
          PACKAGE_VERSION: '${{ github.event.inputs.version }}-SNAPSHOT'

      - name: 'Rename zip artifact'
        working-directory: ${{ env.RELEASE_PATH }}/build/${{ env.PACKAGE_NAME }}/${{ env.PACKAGE_NAME }}
        run: mv package.zip ${{ env.PACKAGE_NAME }}.zip

      - name: 'Publish to Artifactory'
        uses: mindjolt/actions/package-manager-publish@v2
        with:
          rootUrl: ${{ secrets.ARTIFACTORY_ROOT }}
          user: ${{ secrets.ARTIFACTORY_USER }}
          password: ${{ secrets.ARTIFACTORY_PASSWORD }}
          packageZip: ${{ env.RELEASE_PATH }}/build/${{ env.PACKAGE_NAME }}/${{ env.PACKAGE_NAME }}/${{ env.PACKAGE_NAME }}.zip
          packageJson: ${{ env.RELEASE_PATH }}/build/${{ env.PACKAGE_NAME }}/${{ env.PACKAGE_NAME }}/package.json
          branchRef: ${{ github.event.inputs.branch }}

      - name: 'Upload Artifacts'
        uses: actions/upload-artifact@v2
        with:
          path: |
            Editor/Release/build/${{ env.PACKAGE_NAME }}/${{ env.PACKAGE_NAME }}/${{ env.PACKAGE_NAME }}.zip
            Editor/Release/build/${{ env.PACKAGE_NAME }}/${{ env.PACKAGE_NAME }}/package.json
